// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  address String @unique
  nickname String?
  uploadAudios UploadAudio[]
  audioNFTs AudioNFT[]
  balanceOfAudioNFT BalanceOfAudioNFT[]
  generateImages Image[]
  altars Altar[]
}

model UploadAudio {
  id Int @id @default(autoincrement())
  title String?
  description String?
  audioUrl String
  previewUrl String
  audioSize Int?
  encryptedAudioCID String?
  symmetricKey Bytes?
  previewAudioCID String?
  creatorAddress String?
  creator User? @relation(fields: [creatorAddress], references: [address])
}

model Image {
  id Int @id @default(autoincrement())
  imageUrl String
  prompt String
  jacketCID String?
  creatorAddress String?
  creator User? @relation(fields: [creatorAddress], references: [address])
}

model AudioNFT {
  id Int @id @default(autoincrement())
  chainId Int
  contractAddress String
  tokenId Int
  title String
  encryptedAudioCID String
  encryptedSymmetricKey String
  jacketImageCID String
  creatorAddress String
  previewAudioCID String
  decryptedAudioUrl String
  creator         User     @relation(fields: [creatorAddress], references: [address])
  balanceOfAudioNFT BalanceOfAudioNFT?

  @@unique([chainId, contractAddress, tokenId])
}

model AltarTemplate {
  id Int @id @default(autoincrement())
  name String
  thumbnailUrl String
  roomUrl String
  altars Altar[]
}

model Altar {
  id Int @id @default(autoincrement())
  templateId Int
  title String
  description String
  creatorId Int
  arrangementData Json
  creator User @relation(fields: [creatorId], references: [id])
  template AltarTemplate @relation(fields: [templateId], references: [id])
}

model BalanceOfAudioNFT {
  id Int @id @default(autoincrement())
  userAddress String
  chainId Int
  contractAddress String
  tokenId Int
  balance Int
  user User @relation(fields: [userAddress], references: [address])
  audioNFT AudioNFT @relation(fields: [chainId, contractAddress, tokenId], references: [chainId, contractAddress, tokenId])

  @@unique([chainId, contractAddress, tokenId])
}
